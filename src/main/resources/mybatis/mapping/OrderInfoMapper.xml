<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mfq.admin.web.dao.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.mfq.admin.web.bean.OrderInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="period_pay" property="periodPay" jdbcType="DECIMAL" />
    <result column="period" property="period" jdbcType="INTEGER" />
    <result column="online_pay" property="onlinePay" jdbcType="DECIMAL" />
    <result column="hospital_pay" property="hospitalPay" jdbcType="DECIMAL" />
    <result column="use_balance" property="useBalance" jdbcType="DECIMAL" />
    <result column="coupon_num" property="couponNum" jdbcType="VARCHAR" />
    <result column="security_code" property="securityCode" jdbcType="VARCHAR" />
    <result column="policy_status" property="policyStatus" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="refund_type" property="refundType" jdbcType="TINYINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="service_start_time" property="serviceStartTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, price, uid, pid, pay_type, period_pay, period, online_pay, hospital_pay, 
    use_balance, coupon_num, security_code, policy_status, status, refund_type, created_at, 
    updated_at, service_start_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mfq.admin.web.bean.example.OrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null and size != null">
      limit #{start},#{size}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mfq.admin.web.bean.example.OrderInfoExample" >
    delete from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mfq.admin.web.bean.OrderInfo" >
    insert into order_info (id, order_no, price, 
      uid, pid, pay_type, period_pay, 
      period, online_pay, hospital_pay, 
      use_balance, coupon_num, security_code, 
      policy_status, status, refund_type, 
      created_at, updated_at, service_start_time
      )
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{uid,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{payType,jdbcType=TINYINT}, #{periodPay,jdbcType=DECIMAL}, 
      #{period,jdbcType=INTEGER}, #{onlinePay,jdbcType=DECIMAL}, #{hospitalPay,jdbcType=DECIMAL}, 
      #{useBalance,jdbcType=DECIMAL}, #{couponNum,jdbcType=VARCHAR}, #{securityCode,jdbcType=VARCHAR}, 
      #{policyStatus,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{refundType,jdbcType=TINYINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{serviceStartTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mfq.admin.web.bean.OrderInfo" >
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="periodPay != null" >
        period_pay,
      </if>
      <if test="period != null" >
        period,
      </if>
      <if test="onlinePay != null" >
        online_pay,
      </if>
      <if test="hospitalPay != null" >
        hospital_pay,
      </if>
      <if test="useBalance != null" >
        use_balance,
      </if>
      <if test="couponNum != null" >
        coupon_num,
      </if>
      <if test="securityCode != null" >
        security_code,
      </if>
      <if test="policyStatus != null" >
        policy_status,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="refundType != null" >
        refund_type,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="serviceStartTime != null" >
        service_start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="periodPay != null" >
        #{periodPay,jdbcType=DECIMAL},
      </if>
      <if test="period != null" >
        #{period,jdbcType=INTEGER},
      </if>
      <if test="onlinePay != null" >
        #{onlinePay,jdbcType=DECIMAL},
      </if>
      <if test="hospitalPay != null" >
        #{hospitalPay,jdbcType=DECIMAL},
      </if>
      <if test="useBalance != null" >
        #{useBalance,jdbcType=DECIMAL},
      </if>
      <if test="couponNum != null" >
        #{couponNum,jdbcType=VARCHAR},
      </if>
      <if test="securityCode != null" >
        #{securityCode,jdbcType=VARCHAR},
      </if>
      <if test="policyStatus != null" >
        #{policyStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="refundType != null" >
        #{refundType,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceStartTime != null" >
        #{serviceStartTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mfq.admin.web.bean.example.OrderInfoExample" resultType="java.lang.Integer" >
    select count(*) from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.periodPay != null" >
        period_pay = #{record.periodPay,jdbcType=DECIMAL},
      </if>
      <if test="record.period != null" >
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.onlinePay != null" >
        online_pay = #{record.onlinePay,jdbcType=DECIMAL},
      </if>
      <if test="record.hospitalPay != null" >
        hospital_pay = #{record.hospitalPay,jdbcType=DECIMAL},
      </if>
      <if test="record.useBalance != null" >
        use_balance = #{record.useBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.couponNum != null" >
        coupon_num = #{record.couponNum,jdbcType=VARCHAR},
      </if>
      <if test="record.securityCode != null" >
        security_code = #{record.securityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.policyStatus != null" >
        policy_status = #{record.policyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.refundType != null" >
        refund_type = #{record.refundType,jdbcType=TINYINT},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceStartTime != null" >
        service_start_time = #{record.serviceStartTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_info
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      uid = #{record.uid,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=TINYINT},
      period_pay = #{record.periodPay,jdbcType=DECIMAL},
      period = #{record.period,jdbcType=INTEGER},
      online_pay = #{record.onlinePay,jdbcType=DECIMAL},
      hospital_pay = #{record.hospitalPay,jdbcType=DECIMAL},
      use_balance = #{record.useBalance,jdbcType=DECIMAL},
      coupon_num = #{record.couponNum,jdbcType=VARCHAR},
      security_code = #{record.securityCode,jdbcType=VARCHAR},
      policy_status = #{record.policyStatus,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      refund_type = #{record.refundType,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      service_start_time = #{record.serviceStartTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mfq.admin.web.bean.OrderInfo" >
    update order_info
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="periodPay != null" >
        period_pay = #{periodPay,jdbcType=DECIMAL},
      </if>
      <if test="period != null" >
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="onlinePay != null" >
        online_pay = #{onlinePay,jdbcType=DECIMAL},
      </if>
      <if test="hospitalPay != null" >
        hospital_pay = #{hospitalPay,jdbcType=DECIMAL},
      </if>
      <if test="useBalance != null" >
        use_balance = #{useBalance,jdbcType=DECIMAL},
      </if>
      <if test="couponNum != null" >
        coupon_num = #{couponNum,jdbcType=VARCHAR},
      </if>
      <if test="securityCode != null" >
        security_code = #{securityCode,jdbcType=VARCHAR},
      </if>
      <if test="policyStatus != null" >
        policy_status = #{policyStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="refundType != null" >
        refund_type = #{refundType,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceStartTime != null" >
        service_start_time = #{serviceStartTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mfq.admin.web.bean.OrderInfo" >
    update order_info
    set order_no = #{orderNo,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      uid = #{uid,jdbcType=BIGINT},
      pid = #{pid,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=TINYINT},
      period_pay = #{periodPay,jdbcType=DECIMAL},
      period = #{period,jdbcType=INTEGER},
      online_pay = #{onlinePay,jdbcType=DECIMAL},
      hospital_pay = #{hospitalPay,jdbcType=DECIMAL},
      use_balance = #{useBalance,jdbcType=DECIMAL},
      coupon_num = #{couponNum,jdbcType=VARCHAR},
      security_code = #{securityCode,jdbcType=VARCHAR},
      policy_status = #{policyStatus,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      refund_type = #{refundType,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      service_start_time = #{serviceStartTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>










  <sql id="selectsql">
    order_info.id, order_info.order_no as orderNo, order_info.price, order_info.uid, order_info.pid, order_info.pay_type as
    payType, order_info.period_pay as periodPay, order_info.period, order_info.online_pay as onlinePay,
    order_info.hospital_pay as hospitalPay, order_info.use_balance as useBalance, order_info.coupon_num as couponNum,
    order_info.security_code as
    securityCode, order_info.refund_type
    as refundType, order_info.status, order_info.policy_status as policyStatus,
    order_info.created_at as
    createdAt, order_info.updated_at as updatedAt
  </sql>

  <sql id="insertsql">
    order_no, price, uid, pid, pay_type, period_pay, period,
    online_pay,
    hospital_pay, use_balance, coupon_num, security_code, status, policy,
    refund_type, created_at,
    updated_at
  </sql>

  <select id="findById" resultType="com.mfq.admin.web.bean.OrderInfo">
    select
    <include refid="selectsql" />
    from order_info where id=#{id}
  </select>

  <select id="findByOrderNo" resultType="com.mfq.admin.web.bean.OrderInfo">
    select
    <include refid="selectsql" />
    from order_info where order_no=#{orderNo}
  </select>

  <select id="findCount" resultType="Long">
    select count(1) from order_info where 1=1
    <if test="orderNo != null and orderNo != ''">
      and order_no=#{orderNo}
    </if>
    <if test="uid != null">
      and uid=#{uid}
    </if>
    <if test="securityCode != null and securityCode != ''">
      and security_code =#{securityCode}
    </if>
    <if test="status != null and status != 100">
      and status =#{status}
    </if>
    <if test="ob != null and ob != ''">
      and created_at &gt;= #{ob}
    </if>
    <if test="oe != null and oe != ''">
      and created_at &lt;= #{oe}
    </if>
  </select>

  <select id="findByPage" resultType="com.mfq.admin.web.bean.OrderInfo">
    select
    <include refid="selectsql" />
    from order_info where 1=1
    <if test="orderNo != null and orderNo != ''">
      and order_no=#{orderNo}
    </if>
    <if test="uid != null">
      and uid=#{uid}
    </if>
    <if test="securityCode != null and securityCode != ''">
      and security_code=#{securityCode}
    </if>
    <if test="status != null and status != 100">
      and status=#{status}
    </if>
    <if test="ob != null and ob != ''">
      and created_at &gt;= #{ob}
    </if>
    <if test="oe != null and oe != ''">
      and created_at &lt;= #{oe}
    </if>
    order by id desc limit #{start}, #{pagesize}
  </select>

  <select id="findByPageByHospital" resultType="com.mfq.admin.web.bean.OrderInfo">
    select
    <include refid="selectsql" />
    from order_info LEFT join product on order_info.pid = product.id

    and product.hospital_id = #{hospitalId}

    <if test="orderNo != null and orderNo != ''">
      and order_info.order_no=#{orderNo}
    </if>
    <if test="uid != null">
      and order_info.uid=#{uid}
    </if>
    <if test="securityCode != null and securityCode != ''">
      and order_info.security_code=#{securityCode}
    </if>
    <if test="status != null and status != 100">
      and order_info.status=#{status}
    </if>
    order by id desc limit #{start}, #{pagesize}
  </select>

  <update id="updateOrderStatusSafe">
    update order_info set status=#{newStatus} where
    id=#{id} and status=#{oldStatus}
  </update>

  <select id="findCountByFinanceOrder" resultType="Long">
    select count(1) from pay_record as pay left join order_info as o on pay.order_no = o.order_no LEFT JOIN
    product as p on o.pid=p.id LEFT JOIN users u on u.uid=o.uid LEFT JOIN hospital h on p.hospital_id=h.id where pay.status = 2

    <if test="orderNo != null and orderNo != ''">
      and o.order_no like '%${orderNo}%'
    </if>
    <if test="mobile !=null and mobile != ''">
      and u.mobile like '%${mobile}%'
    </if>
    <if test="hospitalName !=null and hospitalName != ''">
      and h.name like '%${hospitalName}%'
    </if>
    <if test="payType !=null and payType!=-1">
      and o.pay_type=#{payType}
    </if>
    <if test="payApi !=null and payApi!= ''">
      and pay.tpp = #{payApi}
    </if>
    <if test="ob != null and ob != ''">
      and o.created_at &gt;= #{ob}
    </if>
    <if test="oe != null and oe != ''">
      and o.created_at &lt;= #{oe}
    </if>
    <if test="status != null and status != 100">
      and o.status=#{status}
    </if>
    order by o.id desc limit #{start}, #{pagesize}

  </select>

  <select id="findByFinancePage" resultType="java.util.HashMap">

    select
    pay.id, pay.order_no, u.mobile, h.name, p.type, pay.updated_at, pay.tpp, o.price, pay.status
    from pay_record as pay left join order_info as o on pay.order_no = o.order_no LEFT JOIN
    product as p on o.pid=p.id LEFT JOIN users u on u.uid=o.uid LEFT JOIN hospital h on p.hospital_id=h.id where pay.status = 2

    <if test="orderNo != null and orderNo != ''">
      and o.order_no like '%${orderNo}%'
    </if>
    <if test="mobile !=null and mobile != ''">
      and u.mobile like '%${mobile}%'
    </if>
    <if test="hospitalName !=null and hospitalName != ''">
      and h.name like '%${hospitalName}%'
    </if>
    <if test="payType !=null and payType!=-1">
      and o.pay_type=#{payType}
    </if>
    <if test="payApi !=null and payApi!= ''">
      and pay.tpp = #{payApi}
    </if>
    <if test="ob != null and ob != ''">
      and o.created_at &gt;= #{ob}
    </if>
    <if test="oe != null and oe != ''">
      and o.created_at &lt;= #{oe}
    </if>
    <if test="status != null">
      and o.status in
      <foreach collection="status" open="(" separator="," close=")"
               item="id">
        #{id}
      </foreach>
    </if>
    order by o.id desc
    limit #{start}, #{pagesize}

  </select>

  <select id="findStatusByUid" resultType="map">
    select uid,
    sum(case when status=3 then 1 else 0 end) as three,
    sum(case when status=1 then 1 else 0 end) as one,
    sum(case when status=0 then 1 else 0 end) as zero
    from order_info

    where uid in
    <foreach collection="uids" open = "(" close = ")" separator = "," item = "uid" >
      #{uid}
    </foreach>
    group by uid

  </select>


</mapper>